#This is code for Lesson 4 of
#Applied Unsupervised Learning with R
#This code covers market basket analysis


#we will use data from https://web.stanford.edu/~hastie/ElemStatLearn/

#first, download this data to your computer as described in the lesson

#set a filepath and read the data in
#you will need to replace the '' with the location of the data on your computer
filepath=''
mkt<-read.csv(filepath,stringsAsFactors=FALSE,header=FALSE,sep=' ')

#next, we will create dummy variables manually for each of the variables in the dataset
#manual way to create dummy variables
mkt$low_income<-1*(mkt$V1<=5)
mkt$high_income<-1*(mkt$V1>5)

mkt$male<-1*(mkt$V2==1)
mkt$female<-1*(mkt$V2==2)

mkt$married<-1*(mkt$V3==1)
mkt$livingtogether<-1*(mkt$V3==2)
mkt$divorced<-1*(mkt$V3==3)
mkt$widowed<-1*(mkt$V3==4)
mkt$single<-1*(mkt$V3==5)

mkt$young<-1*(mkt$V4<=3)
mkt$old<-1*(mkt$V4>3)

mkt$low_edu<-1*(mkt$V5<=3)
mkt$high_edu<-1*(mkt$V5>3)

mkt$managerial<-1*(mkt$V6==1)
mkt$sales<-1*(mkt$V6==2)
mkt$laborer<-1*(mkt$V6==3)
mkt$clerical<-1*(mkt$V6==4)
mkt$homemaker<-1*(mkt$V6==5)
mkt$student<-1*(mkt$V6==6)
mkt$military<-1*(mkt$V6==7)
mkt$retired<-1*(mkt$V6==8)
mkt$unemployed<-1*(mkt$V6==9)

mkt$newtoarea<-1*(mkt$V7<=2)
mkt$longinarea<-1*(mkt$V7>2)

mkt$notmarried<-1*(mkt$V8==1)
mkt$dualincome<-1*(mkt$V8==2)
mkt$singleincome<-1*(mkt$V8==3)

mkt$smallhousehold<-1*(mkt$V9<=4)
mkt$largehousehold<-1*(mkt$V9>4)

mkt$oldhousehold<-1*(mkt$V10<=4)
mkt$younghousehold<-1*(mkt$V10>4)

mkt$own<-1*(mkt$V11==1)
mkt$rent<-1*(mkt$V11==2)
mkt$parents<-1*(mkt$V11==3)

mkt$house<-1*(mkt$V12==1)
mkt$condo<-1*(mkt$V12==2)
mkt$apartment<-1*(mkt$V12==3)
mkt$mobilehome<-1*(mkt$V12==4)
mkt$otherhome<-1*(mkt$V12==5)

mkt$amerindian<-1*(mkt$V13==1)
mkt$asian<-1*(mkt$V13==2)
mkt$black<-1*(mkt$V13==3)
mkt$eastindian<-1*(mkt$V13==4)
mkt$hispanic<-1*(mkt$V13==5)
mkt$pacificislander<-1*(mkt$V13==6)
mkt$white<-1*(mkt$V13==7)
mkt$otherethnic<-1*(mkt$V13==8)

mkt$english<-1*(mkt$V14==1)
mkt$spanish<-1*(mkt$V14==2)
mkt$otherlanguage<-1*(mkt$V14==3)


#create a dataframe called mktdummies that contains only these dummy variables
mktdummies<-mkt[,15:ncol(mkt)]

#check the means of each of the dummy variables
print(colMeans(mktdummies,na.rm=TRUE))

#set a support threshold - here we use 10%
support_thresh<-0.1

#next, we will do our first pass through the data
firstpass<-unname(which(colMeans(mktdummies,na.rm=TRUE)>support_thresh))

#next, we will do our second pass
#start by finding the possible two-item baskets
secondcand<-t(combn(firstpass,2))
secondpass<-NULL

#next, iterate through each candidate basket to see which ones meet the support threshold
k<-1
while(k<=nrow(secondcand)){
support<-mean(mktdummies[,secondcand[k,1]]*mktdummies[,secondcand[k,2]],na.rm=TRUE)

if(support>support_thresh){
secondpass<-rbind(secondpass,secondcand[k,])
}

k<-k+1
}


#next, we will do three-item baskets
thirdpass<-NULL
k<-1
while(k<=nrow(secondpass)){
j<-1
while(j<=length(firstpass)){
n<-1
product<-1
while(n<=ncol(secondpass)){
product<-product*mktdummies[,secondpass[k,n]]
n<-n+1
}
if(!(firstpass[j] %in% secondpass[k,])){
product<-product*mktdummies[,firstpass[j]]
support<-mean(product,na.rm=TRUE)
if(support>support_thresh){
thirdpass<-rbind(thirdpass,c(secondpass[k,],firstpass[j]))
}
}
j<-j+1
}
k<-k+1
}

#finally, we can do the fourth pass through the data

fourthpass<-NULL
k<-1
while(k<=nrow(thirdpass)){
j<-1
while(j<=length(firstpass)){
n<-1
product<-1
while(n<=ncol(thirdpass)){
product<-product*mktdummies[,thirdpass[k,n]]
n<-n+1
}
if(!(firstpass[j] %in% thirdpass[k,])){
product<-product*mktdummies[,firstpass[j]]
support<-mean(product,na.rm=TRUE)
if(support>support_thresh){
fourthpass<-rbind(fourthpass,c(thirdpass[k,],firstpass[j]))
}
}
j<-j+1
}
k<-k+1
}



#now we are ready to generate associative rules

#we will set thresholds for confidence and lift
lift_thresh<-1.8
conf_thresh<-.8

#we calculate lift and confidence for each candidate rule
thirdpass_conf<-NULL
k<-1
while(k<=nrow(thirdpass)){
 
support<-mean(mktdummies[,thirdpass[k,1]]*mktdummies[,thirdpass[k,2]]*mktdummies[,thirdpass[k,3]],na.rm=TRUE)
 
confidence<-mean(mktdummies[,thirdpass[k,1]]*mktdummies[,thirdpass[k,2]]*mktdummies[,thirdpass[k,3]],na.rm=TRUE)/mean(mktdummies[,thirdpass[k,1]]*mktdummies[,thirdpass[k,2]],na.rm=TRUE)
 
lift<-confidence/mean(mktdummies[,thirdpass[k,3]],na.rm=TRUE)
 
thirdpass_conf<-rbind(thirdpass_conf,unname(c(thirdpass[k,],support,confidence,lift)))
k<-k+1
}


#we filter our rules by which ones have the highest confidence and lift
thirdpass_high<-thirdpass_conf[which(thirdpass_conf[,5]>conf_thresh & thirdpass_conf[,6]>lift_thresh),]


#we examine the rules we found - this is the final outcome of the Apriori algorithm and market basket analysis

print(thirdpass_high)

