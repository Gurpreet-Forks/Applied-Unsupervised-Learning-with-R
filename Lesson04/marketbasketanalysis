#This is code for Lesson 4 of
#Applied Unsupervised Learning with R
#This code covers market basket analysis


#we will use data from http://archive.ics.uci.edu/ml/datasets/Adult

#first, download this data to your computer as described in the lesson

#set a filepath and read the data in
#you will need to replace the '' with the location of the data on your computer
filepath='census.csv'
mkt<-read.csv(filepath,stringsAsFactors=FALSE,header=FALSE,sep=',')

#next, we will create dummy variables manually for each of the variables in the dataset
#manual way to create dummy variables
mkt$old<-1*(mkt$V1>median(mkt$V1))
mkt$young<-1*(mkt$V1<=median(mkt$V1))

mkt$government_employee<-1*(mkt$V2 %in% c(" State-gov"," Local-gov"," Federal-gov"))
mkt$self_employed<-1*(mkt$V2 %in% c(" Self-emp-not-inc"," Self-emp-inc"))
mkt$never_worked<-1*(mkt$V2 %in% c(" Never-worked"))
mkt$private_employment<-1*(mkt$V2 %in% c(" Private"))
mkt$other_employment<-1*(mkt$V2 %in% c(" ?"," Without-pay" ))

mkt$high_school_incomplete<-1*(mkt$V4 %in% c(" 1st-4th"," Preschool"," 5th-6th"," 7th-8th"," 9th"," 10th"," 11th"," 12th"))
mkt$high_school_complete<-1*(mkt$V4 %in% c(" HS-grad"," Some-college"," Assoc-acdm"," Assoc-voc"))
mkt$bachelors<-1*(mkt$V4 %in% c(" Bachelors"))
mkt$post_bachelors<-1*(mkt$V4 %in% c(" HS-grad", " Masters"," Prof-school"," Doctorate" ))


mkt$married<-1*(mkt$V6 %in% c(" Married-civ-spouse"," Married-AF-spouse"," Married-spouse-absent"))
mkt$never_married<-1*(mkt$V6 %in% c(" Never-married"))
mkt$divorced_separated<-1*(mkt$V6 %in% c(" Divorced"," Separated"))
mkt$widowed<-1*(mkt$V6 %in% c( " Widowed"))


mkt$clerical<-1*(mkt$V7 %in% c(" Adm-clerical"))
mkt$managerial<-1*(mkt$V7 %in% c(" Exec-managerial"))
mkt$moving<-1*(mkt$V7 %in% c(" Transport-moving"))
mkt$farming_fishing<-1*(mkt$V7 %in% c(" Farming-fishing"))
mkt$craft_repair<-1*(mkt$V7 %in% c(" Craft-repair" ))
mkt$sales<-1*(mkt$V7 %in% c(" Sales"))
mkt$tech_support<-1*(mkt$V7 %in% c(" Tech-support"))
mkt$service<-1*(mkt$V7 %in% c(" Protective-serv"," Priv-house-serv", " Other-service"))
mkt$armed_forces<-1*(mkt$V7 %in% c(" Armed-Forces"))
mkt$other_employment<-1*(mkt$V7 %in% c(" Handlers-cleaners"," ?"," Machine-op-inspct"," Prof-specialty"))


mkt$white<-1*(mkt$V9 %in% c(" White"))
mkt$black<-1*(mkt$V9 %in% c(" Black"))
mkt$asian<-1*(mkt$V9 %in% c(" Asian-Pac-Islander"))
mkt$amer_indian_eskimo<-1*(mkt$V9 %in% c(" Amer-Indian-Eskimo"))
mkt$other<-1*(mkt$V9 %in% c(" Other"))

mkt$male<-1*(mkt$V10 %in% c(" Male"))
mkt$female<-1*(mkt$V10 %in% c(" Female"))

mkt$high_hours<-1*(mkt$V13 > median(mkt$V13))
mkt$low_hours<-1*(mkt$V13 <= median(mkt$V13))

mkt$low_income<-1*(mkt$V15==" <=50K")
mkt$high_income<-1*(mkt$V15==" >50K")


#create a dataframe called mktdummies that contains only these dummy variables
mktdummies<-mkt[,16:ncol(mkt)]

#check the means of each of the dummy variables
print(colMeans(mktdummies,na.rm=TRUE))

#set a support threshold - here we use 10%
support_thresh<-0.1

#next, we will do our first pass through the data
firstpass<-unname(which(colMeans(mktdummies,na.rm=TRUE)>support_thresh))

#next, we will do our second pass
#start by finding the possible two-item baskets
secondcand<-t(combn(firstpass,2))
secondpass<-NULL

#next, iterate through each candidate basket to see which ones meet the support threshold
k<-1
while(k<=nrow(secondcand)){
support<-mean(mktdummies[,secondcand[k,1]]*mktdummies[,secondcand[k,2]],na.rm=TRUE)

if(support>support_thresh){
secondpass<-rbind(secondpass,secondcand[k,])
}

k<-k+1
}


#next, we will do three-item baskets
thirdpass<-NULL
k<-1
while(k<=nrow(secondpass)){
j<-1
while(j<=length(firstpass)){
n<-1
product<-1
while(n<=ncol(secondpass)){
product<-product*mktdummies[,secondpass[k,n]]
n<-n+1
}
if(!(firstpass[j] %in% secondpass[k,])){
product<-product*mktdummies[,firstpass[j]]
support<-mean(product,na.rm=TRUE)
if(support>support_thresh){
thirdpass<-rbind(thirdpass,c(secondpass[k,],firstpass[j]))
}
}
j<-j+1
}
k<-k+1
}

#finally, we can do the fourth pass through the data

fourthpass<-NULL
k<-1
while(k<=nrow(thirdpass)){
j<-1
while(j<=length(firstpass)){
n<-1
product<-1
while(n<=ncol(thirdpass)){
product<-product*mktdummies[,thirdpass[k,n]]
n<-n+1
}
if(!(firstpass[j] %in% thirdpass[k,])){
product<-product*mktdummies[,firstpass[j]]
support<-mean(product,na.rm=TRUE)
if(support>support_thresh){
fourthpass<-rbind(fourthpass,c(thirdpass[k,],firstpass[j]))
}
}
j<-j+1
}
k<-k+1
}



#now we are ready to generate associative rules

#we will set thresholds for confidence and lift
lift_thresh<-1.8
conf_thresh<-.8

#we calculate lift and confidence for each candidate rule
thirdpass_conf<-NULL
k<-1
while(k<=nrow(thirdpass)){
 
support<-mean(mktdummies[,thirdpass[k,1]]*mktdummies[,thirdpass[k,2]]*mktdummies[,thirdpass[k,3]],na.rm=TRUE)
 
confidence<-mean(mktdummies[,thirdpass[k,1]]*mktdummies[,thirdpass[k,2]]*mktdummies[,thirdpass[k,3]],na.rm=TRUE)/mean(mktdummies[,thirdpass[k,1]]*mktdummies[,thirdpass[k,2]],na.rm=TRUE)
 
lift<-confidence/mean(mktdummies[,thirdpass[k,3]],na.rm=TRUE)
 
thirdpass_conf<-rbind(thirdpass_conf,unname(c(thirdpass[k,],support,confidence,lift)))
k<-k+1
}


#we filter our rules by which ones have the highest confidence and lift
thirdpass_high<-thirdpass_conf[which(thirdpass_conf[,5]>conf_thresh & thirdpass_conf[,6]>lift_thresh),]


#we examine the rules we found - this is the final outcome of the Apriori algorithm and market basket analysis

print(thirdpass_high)

